<!--
    10-152-112 Advanced Java
    build.xml for MVC Team Challenge
-->

<project default="deploy">

  <property name="user_home" value="/home/student" />
  <property name="project_home" value="${user_home}/GitHubRepos/teamMVC" />
  <property name="tomcat" value="${user_home}/tomcat" />
  <property name="src" value="src"/>
  <property name="config" value="config"/>
  <property name="build" value="build"/>
  <property name="dist" value="dist"/>
  <property name="lib" value="lib"/>
  <property name="WEB-INF" value="${build}/WEB-INF"/>
  <property name="META-INF" value="${build}/META-INF"/>
  <property name="web_classes" value="${WEB-INF}/classes"/>
  <property name="build.compiler" value="modern"/>
  <property name="static" value="public_html" />
  <property name="junit" value="${project_home}/lib/junit.jar" />
  <property name="hamcrest" value="${project_home}/lib/hamcrest.jar" />
  <property name="java_hamcrest" value="${project_home}/lib/java-hamcrest.jar" />
  <property name="java112.servlet" value="present"/>
  <property name="utilities" value="${src}/java112/utilities" />
  
  <path id="classpath">
        <fileset dir="${lib}">
          <include name="*.jar"/>
        </fileset>
  </path>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    <mkdir dir="${build}/classes"/>
    <mkdir dir="${META-INF}"/>
    <mkdir dir="${dist}" />
    <mkdir dir="${WEB-INF}" />
    <mkdir dir="${web_classes}" />
    <mkdir dir="${WEB-INF}/lib" />
    <mkdir dir="${config}" />
    <mkdir dir="${static}" />
    <mkdir dir="${static}/images" />
    <mkdir dir="${utilities}" />
    <echo message="Initialization for project 1 completed" />
  </target>

  <target name="clean" description="Delete build and dist">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>

  <target name="compile" depends="init">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}"
           destdir="${build}/classes"
           classpathref="classpath"
           verbose="false"
           excludes="*.jsp,
                     *.html,
                     *.xml,
                     java112/labs1/**,
                     java112/labs2/**,
                     java112/employee/**,
                     java112/project2/**,
                     java112/project3/**,
                     java112/project4/**,
                     java112/tests/**,
                     java112/demos/**"
           deprecation="on"
           debug="on"
           includeAntRuntime="false" >
       <compilerarg value="-Xlint:unchecked"/>
     </javac>
  </target>

  <target name="compile_web" depends="init">
    <javac srcdir="${src}"
      destdir="${web_classes}"
      classpathref="classpath"
      verbose="false"
      includes="java112/utilities/**,
                java112/servlet/**"
      excludes="*.jsp,
                *.html,
                *.xml"
      deprecation="on"
      debug="on"
      includeAntRuntime="false"
    />
  </target>

  <target name="build_web" depends="clean, compile_web">

    <copy todir="${web_classes}">
      <fileset dir="${config}"/>
    </copy>

    <!-- copy the images to the build/images dir-->
    <copy todir="${build}/images">
      <fileset dir="${static}/images"/>
    </copy>

    <!-- copy the JSP pages to the web-app dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.jsp"/>
      </fileset>
    </copy>

    <!-- copy the HTML pages to the web-app dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.html"/>
      </fileset>
    </copy>

    <!-- copy the css to the build/images dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.css"/>
      </fileset>
    </copy>

    <!-- copy the js to the build/images dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.js"/>
      </fileset>
    </copy>

    <!-- copy the font files to the build/images dir-->
    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.otf"/>
      </fileset>
    </copy>

    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.eot"/>
      </fileset>
    </copy>

    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.svg"/>
      </fileset>
    </copy>

    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.ttf"/>
      </fileset>
    </copy>

    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.woff"/>
      </fileset>
    </copy>

    <copy todir="${build}">
      <fileset dir="${static}">
        <include name="**/*.woff2"/>
      </fileset>
    </copy>


  </target>

  <target name="dist" depends="build_web">
    <war warfile="${dist}/java112.war"
      webxml="${config}/web.xml"
      basedir="${build}">
    </war>
  </target>

  <target name="deploy" depends="dist">
    <copy file="${dist}/java112.war" todir="${tomcat}/webapps"/>
  </target>

 <!--########################################################################
    |   jdoc - Generates JavaDoc                                               |
    #########################################################################-->
 <target name="jdoc">
   <javadoc packagenames="java112.java112.servlet.*,
                           java112.utilities.*
                         "
            sourcepath="${src}"
            classpath="${lib}/servlet-api.jar"
            defaultexcludes="yes"
            destdir="docs/project_api"
            author="true"
            version="true"
            access="private">
   </javadoc>
 </target>

<!--########################################################################
    |   tcdown, tcup, tcbounce - Restarting tomcat                             |
#########################################################################-->
  <target name="tcdown">
    <exec dir="." executable="${tomcat}/bin/shutdown.sh">
    </exec>
  </target>
  <target name="tcup">
    <exec dir="." executable="${tomcat}/bin/startup.sh">
        <env key="CATALINA_TMPDIR" value="${user_home}/mvcappdata/"/>
    </exec>
  </target>
  <target name="tcbounce">
    <antcall target="tcdown" />
    <sleep seconds="4" />
    <antcall target="tcup" />
  </target>

 </project>